## Connection string to the source cluster: grpcs://<ENDPOINT>/<DATABASE>
src_connection_string: "grpcs://shared-1-grpc.ydb-global.svc.cluster.local:2135/testing-global/aardappel-test"
## Whether aardappel use client balancer or not.
## Set to false if direct connection between client and ydb nodes is not possible (k8s)
## Set to true otherwise
src_client_balancer: false
## Source authorizatrion one of:
##   src_oauth2_file - path to the oauth2 file
##   src_static_token - YDB static token
src_oauth2_file: "/opt/aardappel/secrets/src-sa/key.json"

## Connection string to the destination cluster: grpcs://<ENDPOINT>/<DATABASE>
dst_connection_string: "grpcs://shared-1-grpc.ydb-global.svc.cluster.local:2135/testing-global/aardappel-test"
## Whether aardappel use client balancer or not.
## Set to false if direct connection between client and ydb nodes is not possible (k8s)
## Set to true otherwise
dst_client_balancer: false
## Destination authorizatrion one of:
##   dst_oauth2_file - path to the oauth2 file
##   dst_static_token - YDB static token
dst_oauth2_file: "/opt/aardappel/secrets/dst-sa/key.json"

## The table name to save replication state in the destination database
## the table will be created in the destination database if absent.
## Usually any name which is not clashed with existed tables.
state_table: "aardappel_state"
# Instance of replication process. Each aardappel process sharing the same state table should have a unique instance id to avoid mixing states.
instance_id: "0"

## Replica tables and cdc sources. Transactions will be applied consistently between those tables. Multiple tables can be specified.
streams:
  - src_topic: "producer1/cf1"         # Path of the cdc source topic for the 1st replica table
    consumer: "c1"                     # Topic consumer name in a cdc source topic for the 1st replica table
    dst_table: "/Root/test/table1_rep" # Path of the 1st replica table (should exist and have compatible schema)
  - src_topic: "producer2/cf1"         # Path of the cdc source topic for the 2nd replica table
    consumer: "c1"                     # Topic consumer name in a cdc source topic for the 2nd replica table
    dst_table: "/Root/test/table2_rep" # Path of the 2nd replica table (should exist and have compatible schema)

## Max timeout to analise missed heartbeat in seconds. If we don't get quorum during this interval
## the warning message will be written to the log.
## Should be greater than CDC configured heartbeat interval
max_expected_heartbeat_interval: 10

## Log level (values "debug", "info", "warn", "error")
log_level: "debug"

## Command topic. In this topic you may post events to suggest aardappel what to do if it stops because cannot process some changes consistently
cmd_topic:
  path: aardappel_command
  consumer: c1
